//
// Generated file, do not edit! Created by opp_msgc 4.4 from modules/messages/BLE_Data_MacPkt.msg.
//

#ifndef _BLE_DATA_MACPKT_M_H_
#define _BLE_DATA_MACPKT_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "SimpleAddress.h"
// }}

// cplusplus {{
#include "MacPkt_m.h"
// }}



/**
 * Class generated from <tt>modules/messages/BLE_Data_MacPkt.msg</tt> by opp_msgc.
 * <pre>
 * packet BLE_Data_MacPkt extends MacPkt
 * {
 *     
 *     
 *     unsigned int AccessAddress;
 *     int	hdr_LLID;
 *     bool hdr_NESN;
 *     bool hdr_SN;
 *     bool hdr_MD;
 *  	int	hdr_lgth;   
 *  	double response_data; 
 *  	double challenge_data; 
 *  	int challenge_index; 
 *  	int responseIndex_data;
 *  	
 *  	
 *  	int Opcode;
 *  	
 *  	
 *  	int	Instant;
 *  	
 *  	
 *  	int WinSize;
 *     int WinOffset;
 *     int Interval;
 *     int Latency;
 *     int Timeout;
 *  	
 *  	
 *     int MapCh0to7;
 *     int MapCh8to15;
 *     int MapCh16to23;
 *     int MapCh24to31;
 *     int MapCh32to39; 	
 *     
 *  	
 *  	int ErrorCode;
 * }
 * </pre>
 */
class BLE_Data_MacPkt : public ::MacPkt
{
  protected:
    unsigned int AccessAddress_var;
    int hdr_LLID_var;
    bool hdr_NESN_var;
    bool hdr_SN_var;
    bool hdr_MD_var;
    int hdr_lgth_var;
    double response_data_var;
    double challenge_data_var;
    int challenge_index_var;
    int responseIndex_data_var;
    int Opcode_var;
    int Instant_var;
    int WinSize_var;
    int WinOffset_var;
    int Interval_var;
    int Latency_var;
    int Timeout_var;
    int MapCh0to7_var;
    int MapCh8to15_var;
    int MapCh16to23_var;
    int MapCh24to31_var;
    int MapCh32to39_var;
    int ErrorCode_var;

  private:
    void copy(const BLE_Data_MacPkt& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BLE_Data_MacPkt&);

  public:
    BLE_Data_MacPkt(const char *name=NULL, int kind=0);
    BLE_Data_MacPkt(const BLE_Data_MacPkt& other);
    virtual ~BLE_Data_MacPkt();
    BLE_Data_MacPkt& operator=(const BLE_Data_MacPkt& other);
    virtual BLE_Data_MacPkt *dup() const {return new BLE_Data_MacPkt(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getAccessAddress() const;
    virtual void setAccessAddress(unsigned int AccessAddress);
    virtual int getHdr_LLID() const;
    virtual void setHdr_LLID(int hdr_LLID);
    virtual bool getHdr_NESN() const;
    virtual void setHdr_NESN(bool hdr_NESN);
    virtual bool getHdr_SN() const;
    virtual void setHdr_SN(bool hdr_SN);
    virtual bool getHdr_MD() const;
    virtual void setHdr_MD(bool hdr_MD);
    virtual int getHdr_lgth() const;
    virtual void setHdr_lgth(int hdr_lgth);
    virtual double getResponse_data() const;
    virtual void setResponse_data(double response_data);
    virtual double getChallenge_data() const;
    virtual void setChallenge_data(double challenge_data);
    virtual int getChallenge_index() const;
    virtual void setChallenge_index(int challenge_index);
    virtual int getResponseIndex_data() const;
    virtual void setResponseIndex_data(int responseIndex_data);
    virtual int getOpcode() const;
    virtual void setOpcode(int Opcode);
    virtual int getInstant() const;
    virtual void setInstant(int Instant);
    virtual int getWinSize() const;
    virtual void setWinSize(int WinSize);
    virtual int getWinOffset() const;
    virtual void setWinOffset(int WinOffset);
    virtual int getInterval() const;
    virtual void setInterval(int Interval);
    virtual int getLatency() const;
    virtual void setLatency(int Latency);
    virtual int getTimeout() const;
    virtual void setTimeout(int Timeout);
    virtual int getMapCh0to7() const;
    virtual void setMapCh0to7(int MapCh0to7);
    virtual int getMapCh8to15() const;
    virtual void setMapCh8to15(int MapCh8to15);
    virtual int getMapCh16to23() const;
    virtual void setMapCh16to23(int MapCh16to23);
    virtual int getMapCh24to31() const;
    virtual void setMapCh24to31(int MapCh24to31);
    virtual int getMapCh32to39() const;
    virtual void setMapCh32to39(int MapCh32to39);
    virtual int getErrorCode() const;
    virtual void setErrorCode(int ErrorCode);
};

inline void doPacking(cCommBuffer *b, BLE_Data_MacPkt& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BLE_Data_MacPkt& obj) {obj.parsimUnpack(b);}


#endif // _BLE_DATA_MACPKT_M_H_
